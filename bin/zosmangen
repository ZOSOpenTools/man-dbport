#!/bin/sh

#
# zosmangen: script that will generate man pages from the z/OS man pages
#
# zosmangen -h provides syntax
#
zosman="/bin/man"

Help()
{
  echo "$0 : Generate GNU man pages from z/OS man pages" >&2
  echo "$0 [-h?] -d <input directory> -o <output directory>" >&2
  echo "Options:" >&2
  echo "  -h                   : print out this syntax" >&2
  echo "  -d <input directory> : specify the directory the z/OS man pages are searched for via MANPATH" >&2
  echo "  -o <output directory : specify the directory to write the GNU man pages to" >&2
  echo "  -f                   : force write to output directory even if it already exists" >&2
  echo "Example: Read z/OS man pages from /usr/man/C and generate GNU man pages under /usr/local/zopen/zosman" >&2
  echo "$0 -d /usr/man/C -o /usr/local/zopen/zosman" >&2
}

ZOSCommands() 
{
  ZOSCommands_input="${1}"

  # Directory existance tested by caller
  out=$( ( export MANPATH="${ZOSCommands_input}"; ${zosman} -k .) )
  if [ $? -gt 0 ]; then
    echo "Unable to run ${zosman} on directory ${ZOSCommands_input}" >&2
    Help
  fi

  lines=$(echo "${out}" | awk ' { if ($2 == "-") { print $1; }}')
  echo "${lines}"
  return 0
}

 
input=''
output=''
force=false
while getopts "fhd:o:" option; do
  case $option in
    h) # display Help
      Help
      exit 4;;
    f) # force write to existing directory
      force=true
      exit;;
    d) # input directory
      input="${OPTARG}";;
    o) # output directory
      output="${OPTARG}";;
   \?) # Invalid option
      echo "Invalid option ${option}" >&2
      exit 4;;
  esac
done

if [ "x${input}" = "x" ] ; then
  echo "Input directory must be specified by -d" >&2
  Help
  exit 4
fi

if [ "x${output}" = "x" ] ; then
  echo "Output directory must be specified by -o" >&2
  Help
  exit 4
fi

if ! [ -d "${input}" ]; then
  echo "Input directory ${input} does not exist" >&2
  Help
  exit 4
fi

if [ -d "${output}" ] && ! ${force} ; then
  echo "Output directory ${output} exists but -f was not specified" >&2
  Help
  exit 4
fi

if ! mkdir -p "${output}" ; then
  echo "Unable to create output directory ${output}" >&2
  Help
  exit 4
fi

cmds=$(ZOSCommands "${input}") 
if [ $? -gt 0 ] ; then
  Help
  exit 4
fi
